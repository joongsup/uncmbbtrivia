<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jay&#39;s Notes</title>
    <link>/post/</link>
    <description>Recent content in Posts on Jay&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Screen like RStudio Project</title>
      <link>/post/2020/02/16/screen-like-rstudio-project/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/02/16/screen-like-rstudio-project/</guid>
      <description>It’s just that kind of season for UNCMBB. When the UVA’s 3 pointer was fired at the end of the game, I’m sure I wasn’t the only one among the Carolina fans who knew it’d go in, because it’s just that kind of season.
I’ve been coping with the season by instead working harder (?), but after today’s home loss to VA, I decided to write this post (and actually publish it), because, something’s got to be done.</description>
    </item>
    
    <item>
      <title>R Markdown template in Vim</title>
      <link>/post/2019/12/16/r-markdown-template-in-vim/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/12/16/r-markdown-template-in-vim/</guid>
      <description>In my last post, I wrote about an R Markdown centered data analysis workflow that I found to be helpful for many of my work. Helpful, in terms of improving code reusability and remembering what has been done for a particular project. Idea is that I’d start any (ad-hoc) data analysis project with a home Rmd document to store both codes and narratives.
It followed naturally that I soon started hoping to start a new Rmd document with some predefined default setting in Vim, e.</description>
    </item>
    
    <item>
      <title>Adding last season data to uncmbb</title>
      <link>/post/2019/10/25/adding-last-season-data-to-uncmbb/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/10/25/adding-last-season-data-to-uncmbb/</guid>
      <description>code changes needed due to change in source data structure - devtools::use_data –&amp;gt; usethis::use_data - devtools::build_win –&amp;gt; devtools::check_win_dev|release|oldrelease - devtools::check_rhub seems a new checking item CRAN-RELEASE file is created upon submission Uploading package &amp;amp; comments Confirming submission Package submission successful. Check your email for confirmation link. ✔ Setting active project to ‘/Users/jl939a/projects/uncmbb’ Don’t forget to tag this release once accepted by CRAN ✔ Adding ‘^CRAN-RELEASE$’ to ‘.Rbuildignore’ ✔ Setting active project to ‘’ CRAN-RELEASE content: This package was submitted to CRAN on 2019-10-25.</description>
    </item>
    
    <item>
      <title>R Markdown centered data analysis workflow</title>
      <link>/post/2019/10/17/rmarkdown-centered-data-analysis-workflow/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/10/17/rmarkdown-centered-data-analysis-workflow/</guid>
      <description>TLDR My pursuit of a data analysis workflow What I’m hoping for in a data analysis workflow So, what’s it look like? Relevant/future work   TLDR A summary is here, and the codes are here.
I’m a workflow fanatic. Ok, fanatic maybe too strong a word, but that’s what I told one of my R stars when I met her in person recently, who’s also passionate about (in my views) project workflow and “generally doing basic stuff really, really well”.</description>
    </item>
    
    <item>
      <title>R Markdown in Vim</title>
      <link>/post/2019/04/05/r-markdown-revisited/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/04/05/r-markdown-revisited/</guid>
      <description>Two ways to render R Markdown documents Render R Markdown from Vim (without opening R) Render R Markdown (and send email) from R    Two ways to render R Markdown documents I saw this tweet a couple of days ago and decided to look for ways to use R Markdown more at work.
TIL you can embed a &amp;quot;code download&amp;quot; button in an HTML #rmarkdown doc so that users can click to download your source .</description>
    </item>
    
    <item>
      <title>Home and home score difference</title>
      <link>/post/2019/02/04/home-and-home-score-difference/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/02/04/home-and-home-score-difference/</guid>
      <description>## Adding missing grouping variables: `season_opp` # score diff between 1st and 2nd games # too many to show! move on to next p &amp;lt;- df_hnh %&amp;gt;% ungroup() %&amp;gt;% ggplot(aes(x = game_order, y = score_diff)) + geom_point(aes(group = season_opp, colour = season_opp)) #+ #geom_line(aes(group = season_opp, colour = season_opp)) + print(p) # score change distribution df_hnh_wide &amp;lt;- df_hnh %&amp;gt;% ungroup() %&amp;gt;% select(Season, Opponent_School, game_order, score_diff) %&amp;gt;% spread(key = game_order, value = score_diff) %&amp;gt;% mutate(turnaround = game_2 - game_1) df_hnh_wide %&amp;gt;% arrange(desc(turnaround)) %&amp;gt;% head(10) ## # A tibble: 10 x 5 ## Season Opponent_School game_1 game_2 turnaround ## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 2006 Virginia -4 45 49 ## 2 1993 Wake Forest -26 18 44 ## 3 1989 Virginia -23 18 41 ## 4 1997 Florida State -13 28 41 ## 5 1998 Florida State 8 48 40 ## 6 1970 Clemson 5 44 39 ## 7 2014 Wake Forest -6 33 39 ## 8 1965 Wake Forest -22 16 38 ## 9 1997 Wake Forest -24 14 38 ## 10 1985 Clemson -2 34 36 p &amp;lt;- df_hnh_wide %&amp;gt;% mutate(RWera = ifelse(Season &amp;gt;= 2004, TRUE, FALSE)) %&amp;gt;% ggplot(aes(x = turnaround)) + geom_density(aes(colour = factor(RWera))) </description>
    </item>
    
    <item>
      <title>Coping with worst loss at home</title>
      <link>/post/2019/01/13/worst-performance-at-home-sweet-dome/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/01/13/worst-performance-at-home-sweet-dome/</guid>
      <description>It’s been a tough weekend, not least because Tar Heels lost at home. Sometimes I feel like I’m vested too much in the outcome of the Heel’s basketball games, and if my emotional rollercoaster the rest of the weekend gives any clue, I probably am, just a litttle bit. I tried to shake it off, yet it wasn’t particularly easy, not only because we lost at home, but because the loss was the worst one at home under Roy Williams.</description>
    </item>
    
    <item>
      <title>First 8 games results</title>
      <link>/post/2018/12/01/first-8-games-results/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/12/01/first-8-games-results/</guid>
      <description># Load libraries for R suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(uncmbb)) # dataset n &amp;lt;- 8 df_n &amp;lt;- unc %&amp;gt;% group_by(Season) %&amp;gt;% arrange(Game_Date) %&amp;gt;% top_n(-n, Game_Date) a &amp;lt;- df_n %&amp;gt;% group_by(Season) %&amp;gt;% summarize(wins = sum(Result == &amp;quot;W&amp;quot;), losses = sum(Result == &amp;quot;L&amp;quot;)) %&amp;gt;% left_join(mbb_champ_season(unc), by = &amp;quot;Season&amp;quot;) b &amp;lt;- a %&amp;gt;% ggplot(aes(x = losses)) + geom_bar() df_pre12 &amp;lt;- unc %&amp;gt;% group_by(Season) %&amp;gt;% filter(as.numeric(substring(Game_Date, 6, 7)) %in% c(10, 11)) %&amp;gt;% summarize(games = n(), wins = sum(Result == &amp;quot;W&amp;quot;), losses = sum(Result == &amp;quot;L&amp;quot;)) b &amp;lt;- df_pre12 %&amp;gt;% ggplot(aes(x = losses)) + geom_bar() </description>
    </item>
    
    <item>
      <title>SQL, Visualization, R, and Python</title>
      <link>/post/2018/11/03/plotting-101-r-vs-python/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/11/03/plotting-101-r-vs-python/</guid>
      <description>Setup Load libraries Read data  Bar chart Simple frequency Grouped frequency  Line chart Simple sequence Grouped sequence    Not long ago, I saw a thread in my tweeter feed that was talking about what should be the first thing that a data scientist student learns. There were two answers that made sense to me: SQL and visualization.
SQL, because, one needs to be able to get desired data from somewhere, and for the most part in an industry setting at least, that somewhere is typically some form of databases (e.</description>
    </item>
    
    <item>
      <title>Home game streak</title>
      <link>/post/2018/10/06/home-game-streak/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/10/06/home-game-streak/</guid>
      <description>The schedule for the 2018-2019 UNC MBB season has been out, and I ran into a blog post that said something about some teams getting preferable schedules than others, in that those lucky teams get to play three consecutive games at home and in some case, not having to face the same number of consecutive games on the road. I remembered UNC team had a touch streak last season, having to play 3 in a row on the road, and with the current 15 member system (since 2010), such imbalance in schedule is bound to happen eventually.</description>
    </item>
    
  </channel>
</rss>