<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jay&#39;s Notes</title>
    <link>/</link>
    <description>Recent content on Jay&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Apr 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Package uncmbb updated!</title>
      <link>/post/2018/04/17/package-update/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/04/17/package-update/</guid>
      <description>
        &lt;p&gt;Ever since UNCMBB team’s season ended about a month ago, I’ve been meaning to update the data in uncmbb package, and I finally got to it. Obviously the new version includes 2017-2018 season match results for both UNC and Duke MBB teams, but it also includes new features in wrapper functions that are useful when working with uncmbb package.&lt;/p&gt;
&lt;p&gt;I forgot to take notes of the steps taken when I was submitting uncmbb to CRAN for the first time last year, and this time I remembered to do so and take some screenshots too. Below are some notes related to package submission:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update R and RStudio versions
&lt;ul&gt;
&lt;li&gt;This is one of the prompts asked when calling devtools::release(), which is almost&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; the final step in submitting a package to CRAN.&lt;/li&gt;
&lt;li&gt;I didn’t really start with updating R and RStudio this time and only ended up doing so when I ran into this prompt.&lt;/li&gt;
&lt;li&gt;For R version update, there seem to be much better ways to do it, but I ended up manually downloading latest R from CRAN and installing packages as I needed them, starting, e.g., with tidyverse. I could’ve copied over from previous version’s directory as well as personal directory, but I figured some packages needed to be updated anyway, so I might as well start anew with the packages.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Make changes/load all/install and restart/document/check, and commit as needed.
&lt;ul&gt;
&lt;li&gt;This workflow (constant cycles of cmd-shift-L/B/D/E) makes sure my package is ok on current OS, which is Mac.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Travis CI builds linux (Ubuntu) binary package and makes sure package is ok on linux (Ubuntu).
&lt;ul&gt;
&lt;li&gt;I already added Travis-CI to uncmbb project during the season&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; and added build badge to the package github page along with other badges&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Once CI is passed, run devtools::build_win()
&lt;ul&gt;
&lt;li&gt;This function builds windows binary package and makes sure package is ok on windows (runs R CMD check on windows).&lt;/li&gt;
&lt;li&gt;Built package and check log are sent to email.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Once devtools::build_win() is passed, run devtools::release()
&lt;ul&gt;
&lt;li&gt;The function performs a series of tasks, and for the first several attempts, I kept getting this warning: “…* checking top-level files … WARNING Conversion of ‘README.md’ failed: pandoc: Could not fetch…TlsExceptionHostPort (HandshakeFailed Error_EOF)”img.shields.io&amp;quot; 443…“.
&lt;ul&gt;
&lt;li&gt;It seemed pandoc had something to do with this warning, so after several searches, I ended up updating my pandoc via homebrew.&lt;/li&gt;
&lt;li&gt;But even after I updated my pandoc, rmarkdown was still using the old version, and I found out I had to run brew link pandoc to use the latest version.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Once devtools::release() is passed, do the following last step task:
&lt;ul&gt;
&lt;li&gt;Go to confirmation page provided in the submission confirmation email&lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Once confirmed on the page, there will be another cran submission confirmation email.&lt;/li&gt;
&lt;li&gt;Less than an hour later, I received yet another email from CRAN team that says the updated package “is on its way to CRAN now”. Yay!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(library(uncmbb))
suppressPackageStartupMessages(library(dplyr))

tail(unc)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      Season  Game_Date Game_Day   Type Where Opponent_School Result Tm Opp
## 2187   2018 2018-03-07      Wed CTOURN     N        Syracuse      W 78  59
## 2188   2018 2018-03-08      Thu CTOURN     N           Miami      W 82  65
## 2189   2018 2018-03-09      Fri CTOURN     N            Duke      W 74  69
## 2190   2018 2018-03-10      Sat CTOURN     N        Virginia      L 63  71
## 2191   2018 2018-03-16      Fri   NCAA     N        Lipscomb      W 84  66
## 2192   2018 2018-03-18      Sun   NCAA     N       Texas A&amp;amp;M      L 65  86
##        OT
## 2187 &amp;lt;NA&amp;gt;
## 2188 &amp;lt;NA&amp;gt;
## 2189 &amp;lt;NA&amp;gt;
## 2190 &amp;lt;NA&amp;gt;
## 2191 &amp;lt;NA&amp;gt;
## 2192 &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;duke %&amp;gt;% mbb_season_result() %&amp;gt;%
        filter(Type == &amp;quot;REG&amp;quot;) %&amp;gt;%
        arrange(desc(pct_win)) %&amp;gt;%
        head(5) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
## # Groups:   Season [5]
##   Season Type  games  wins losses pct_win pct_loss
##   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 1999   REG      30    29      1   0.967   0.0333
## 2 1986   REG      31    29      2   0.935   0.0645
## 3 1998   REG      29    27      2   0.931   0.0690
## 4 1992   REG      27    25      2   0.926   0.0741
## 5 1963   REG      23    21      2   0.913   0.0870&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unc %&amp;gt;% mbb_champ_season()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 1
## # Groups:   Season [6]
##   Season
##   &amp;lt;chr&amp;gt; 
## 1 1957  
## 2 1982  
## 3 1993  
## 4 2005  
## 5 2009  
## 6 2017&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;I say it almost here, because there’s literally last step one has to do before submitting to CRAN.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Yes it’s quite cumbersome, and there’s got to be a better way to do this that I don’t know of yet.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://juliasilge.com/blog/beginners-guide-to-travis/&#34; class=&#34;uri&#34;&gt;https://juliasilge.com/blog/beginners-guide-to-travis/&lt;/a&gt;&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;The badges ended up giving me some headache during CRAN submission.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;I didn’t do this after receiving the confirmation email first time (after devtools::release() was completed), and kept wondering why there was no more update coming from CRAN.&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>Categorical variable treatment</title>
      <link>/post/2018/03/24/categorical-variable-treatment/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/03/24/categorical-variable-treatment/</guid>
      <description>
        &lt;p&gt;In reviewing details of random forest, I came upon several concepts that I thought were both interesting and important enough to be highlighted in a separate post. Mainly for my own reference, but if it helps others, that’d be great too!&lt;/p&gt;
&lt;div id=&#34;various-categorical-variable-encoding-methods-and-related-concepts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Various categorical variable encoding methods and related concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reference cell coding (dummy encoding/one-hot encoding)
&lt;ul&gt;
&lt;li&gt;How categorical variables are treated (by default?) in regressions in R&lt;/li&gt;
&lt;li&gt;Appreciating R’s way of doing things (behind the scence)&lt;/li&gt;
&lt;li&gt;Turns out same thing as dummy coding!&lt;/li&gt;
&lt;li&gt;Default method in caret (seems for both character and factor variables)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Label encoding (integer encoding)
&lt;ul&gt;
&lt;li&gt;Replace each level with a numeric value&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Links
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/data-design/visiting-categorical-features-and-encoding-in-decision-trees-53400fa65931&#34;&gt;Categorical features and encoding in decision trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;%5Bhttp://roamanalytics.com/2016/10/28/are-categorical-variables-getting-lost-in-your-random-forests/%5D&#34;&gt;Is one-hot encoding bad?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stats.stackexchange.com/questions/21282/regression-based-for-example-on-days-of-week#21292&#34;&gt;Interpreting linear model output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stats.idre.ucla.edu/r/modules/coding-for-categorical-variables-in-regression-models/&#34;&gt;UCLA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stats.stackexchange.com/questions/70699/qualitative-variable-coding-in-regression-leads-to-singularities/70708?utm_medium=organic&amp;amp;utm_source=google_rich_qa&amp;amp;utm_campaign=google_rich_qa&#34;&gt;SE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stats.stackexchange.com/questions/120030/interpretation-of-betas-when-there-are-multiple-categorical-variables?utm_medium=organic&amp;amp;utm_source=google_rich_qa&amp;amp;utm_campaign=google_rich_qa&#34;&gt;SE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;when-to-use-label-encoding-vs.dummy-encoding&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;When to use label encoding vs. dummy encoding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Correlation plot
&lt;ul&gt;
&lt;li&gt;Winner: dummy encoding, because unless the categorical variable is ordinal, labeled value doesn’t mean anything.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Regression
&lt;ul&gt;
&lt;li&gt;Winner: dummy encoding, because of the same reason as above.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tree-based models
&lt;ul&gt;
&lt;li&gt;Winner: label encoding, because
&lt;ul&gt;
&lt;li&gt;Variable importance interpretation&lt;/li&gt;
&lt;li&gt;Grid search for best mtry (in k-fold cv) might result in different result for mtry&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Conflicts with tidy packages ----------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## filter(): dplyr, stats
## lag():    dplyr, stats&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;headers &amp;lt;- c(&amp;quot;age&amp;quot;, &amp;quot;workclass&amp;quot;, &amp;quot;fnlwgt&amp;quot;, &amp;quot;education&amp;quot;, &amp;quot;education_num&amp;quot;, &amp;quot;marital_status&amp;quot;, &amp;quot;occupation&amp;quot;, &amp;quot;relationship&amp;quot;, &amp;quot;race&amp;quot;, &amp;quot;sex&amp;quot;, &amp;quot;capital_gain&amp;quot;, &amp;quot;capital_loss&amp;quot;, &amp;quot;hours_per_week&amp;quot;,  &amp;quot;native_country&amp;quot;, &amp;quot;response&amp;quot;)
adult &amp;lt;- read_csv(&amp;quot;http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data&amp;quot;, col_names = headers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   age = col_character(),
##   workclass = col_character(),
##   fnlwgt = col_character(),
##   education = col_character(),
##   education_num = col_character(),
##   marital_status = col_character(),
##   occupation = col_character(),
##   relationship = col_character(),
##   race = col_character(),
##   sex = col_character(),
##   capital_gain = col_character(),
##   capital_loss = col_character(),
##   hours_per_week = col_character(),
##   native_country = col_character(),
##   response = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in rbind(names(probs), probs_f): number of columns of result is not
## a multiple of vector length (arg 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: 231 parsing failures.
## row # A tibble: 5 x 5 col     row   col   expected    actual expected   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt; actual 1     1  &amp;lt;NA&amp;gt; 15 columns 1 columns file 2     2  &amp;lt;NA&amp;gt; 15 columns 1 columns row 3     3  &amp;lt;NA&amp;gt; 15 columns 1 columns col 4     4  &amp;lt;NA&amp;gt; 15 columns 1 columns expected 5     5  &amp;lt;NA&amp;gt; 15 columns 1 columns actual # ... with 1 more variables: file &amp;lt;chr&amp;gt;
## ... ................. ... .................................. ........ .................................. ...... .................................. .... .................................. ... .................................. ... .................................. ........ .................................. ...... .......................................
## See problems(...) for more details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#head(adult)

vars &amp;lt;- c(&amp;quot;age&amp;quot;, &amp;quot;education&amp;quot;, &amp;quot;response&amp;quot;)
df &amp;lt;- adult[, vars]
head(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##                                                           age
##                                                         &amp;lt;chr&amp;gt;
## 1                                             &amp;lt;!doctype html&amp;gt;
## 2                                        &amp;quot;&amp;lt;html lang=\&amp;quot;en\&amp;quot;&amp;gt;&amp;quot;
## 3                                                      &amp;lt;head&amp;gt;
## 4                                  &amp;quot;&amp;lt;meta charset=\&amp;quot;utf-8\&amp;quot;&amp;gt;&amp;quot;
## 5 &amp;quot;&amp;lt;meta http-equiv=\&amp;quot;X-UA-Compatible\&amp;quot; content=\&amp;quot;IE=edge\&amp;quot;&amp;gt;&amp;quot;
## 6      &amp;quot;&amp;lt;meta name=\&amp;quot;viewport\&amp;quot; content=\&amp;quot;width=device-width&amp;quot;
## # ... with 2 more variables: education &amp;lt;chr&amp;gt;, response &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% group_by(education, response) %&amp;gt;% summarize(n = n())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
## # Groups:   education [?]
##   education response     n
##       &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
## 1      &amp;lt;NA&amp;gt;     &amp;lt;NA&amp;gt;   231&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>Random Forest Revisited</title>
      <link>/post/2018/03/23/random-forest-revisited/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/03/23/random-forest-revisited/</guid>
      <description>
        &lt;p&gt;I’m revisiting some nitty gritty details of a popular classification/regression method, random forest that I’ve put aside for whatever reasons.&lt;/p&gt;
&lt;div id=&#34;example-setting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example setting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Objective: binary classification&lt;/li&gt;
&lt;li&gt;N = 5M observations&lt;/li&gt;
&lt;li&gt;p = 10 variables (5 categorical and 5 continuous variables)&lt;/li&gt;
&lt;li&gt;ntree = 100&lt;/li&gt;
&lt;li&gt;mtry = determined by resampling (10-fold cv)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;bootstrap-samples-for-each-tree&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bootstrap samples for each tree&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bootstrap samples of same size as the original data (N) is taken for each tree.&lt;/li&gt;
&lt;li&gt;This results in about 1/3 of N (hence approx. 1.5M) samples never being chosen for each tree. This is called out of bag (OOB) samples.&lt;/li&gt;
&lt;li&gt;This OOB samples are used for:
&lt;ul&gt;
&lt;li&gt;Unbiased estimate of test set error&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;split-criteria&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Split criteria&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;At each split, the mtry number of features are randomly selected to be consdiered as the splitting variable.&lt;/li&gt;
&lt;li&gt;The best feature is the one that reduces the impurity of the resulting descendents. (exactly how?)&lt;/li&gt;
&lt;li&gt;Come scoring/prediction time, once the best mtry is fixed (via resampling, such as cv), is the final model using the same features selected in training phase, or are they selected at random?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;categorical-variable-treatment-various-encoding-methods&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Categorical variable treatment (various encoding methods)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Has implications in variable importance!
&lt;ul&gt;
&lt;li&gt;How to “aggregate” one-hot encoded feature importance!?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Has implications in grid search step!
&lt;ul&gt;
&lt;li&gt;Grid search for best mtry (in k-fold cv) might result in different result for mtry&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Various encoding methods [&lt;a href=&#34;https://medium.com/data-design/visiting-categorical-features-and-encoding-in-decision-trees-53400fa65931&#34; class=&#34;uri&#34;&gt;https://medium.com/data-design/visiting-categorical-features-and-encoding-in-decision-trees-53400fa65931&lt;/a&gt;]
&lt;ul&gt;
&lt;li&gt;Label encoding (integer encoding)
&lt;ul&gt;
&lt;li&gt;One-liner custom function available&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;One-hot encoding (dummy variable)
&lt;ul&gt;
&lt;li&gt;Default method in caret (seems for both character and factor variables)&lt;/li&gt;
&lt;li&gt;Is one-hot encoding bad? See [&lt;a href=&#34;http://roamanalytics.com/2016/10/28/are-categorical-variables-getting-lost-in-your-random-forests/&#34; class=&#34;uri&#34;&gt;http://roamanalytics.com/2016/10/28/are-categorical-variables-getting-lost-in-your-random-forests/&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Binary encoding
&lt;ul&gt;
&lt;li&gt;Seems interesting, but see this:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;continuous-variable-treatment-binning-vs.raw&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Continuous variable treatment (binning vs. raw)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;For customers subscription based analyses, it seems customary to bin some continuous variables such as tenures into bins, instead of using raw numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;variable-importance-interpretations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Variable importance interpretations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;From the original randomForest package (and not from caret)
&lt;ul&gt;
&lt;li&gt;Mean decrease in accuracy (by permutatino test, type = 1)
&lt;ul&gt;
&lt;li&gt;How’s permutation done?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Mean decrease in impurity (no need for additional test, type = 2): total decrease in impurities resulting from using variable k as a splitter, averaged over all trees.
&lt;ul&gt;
&lt;li&gt;“… is often very consistent with the permutation importance measure”, from [&lt;a href=&#34;https://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm#varimp&#34; class=&#34;uri&#34;&gt;https://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm#varimp&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;What am I getting from caret::varImp vs. randomForest::importance?
&lt;ul&gt;
&lt;li&gt;By default, it seems both caret::varImp and randomForest::importance gives the impurity measure (type = 2)&lt;/li&gt;
&lt;li&gt;randomForest::importance(caret_model_object&lt;span class=&#34;math inline&#34;&gt;\(fit\)&lt;/span&gt;finalModel) gives the MeanDescreaseGini importance values, and so does caret::varImp(caret_model_object$fit, scale = FALSE)!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Variable selection/importance quality?
&lt;ul&gt;
&lt;li&gt;Relevant to different categorical encoding method (e.g., one-hot encoding results in individual level vs. label encoding just one)&lt;/li&gt;
&lt;li&gt;See Strobl et al. [&lt;a href=&#34;https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-25&#34; class=&#34;uri&#34;&gt;https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-25&lt;/a&gt;]
&lt;ul&gt;
&lt;li&gt;RF favors continuous variables and categoricals with many levels&lt;/li&gt;
&lt;li&gt;So if all variables are categoricals with relatively small number of levels, prob ok for now&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;class-imbalance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Class imbalance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href=&#34;https://dpmartin42.github.io/posts/r/imbalanced-classes-part-1&#34; class=&#34;uri&#34;&gt;https://dpmartin42.github.io/posts/r/imbalanced-classes-part-1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>RSS feed and rbind github repo</title>
      <link>/post/2018/02/06/rss-feed/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/02/06/rss-feed/</guid>
      <description>
        &lt;p&gt;&lt;a href=&#34;https://twitter.com/ma_salmon/status/957902480549040128&#34;&gt;Maëlle Salmon&lt;/a&gt; reminded me to submit posts/blog RSS feed to R &lt;a href=&#34;https://rweekly.org/submit&#34;&gt;weekly&lt;/a&gt; on my &lt;a href=&#34;https://twitter.com/uncmbbtrivia/status/957892046676811777&#34;&gt;tweet&lt;/a&gt;, and I set out to do just that. I didn’t have much understanding as to how to though, and googling things like “how to generate rss feed in xmin blogdown” didn’t really turn up anything useful for new bloggers like me. Maybe it’s a quite straighforward knowledge that my full blog url is not a valid RSS feed address, but I got to know that only after checking my blog url from the R weekly submit &lt;a href=&#34;https://validator.w3.org/feed/&#34;&gt;page&lt;/a&gt;. And besides, I’m pretty sure for most blogs that I wanted to add to my Feedly, entering their url address worked just fine, and it was a bit of a head scratcher.&lt;/p&gt;
&lt;p&gt;A bit of digression before getting into how I was able to turn on RSS feed. Since my main excitement with blogdown was being able to focus on content generation (mostly about data science and UNC basketball) and not having to worry about the site set-up, deployment, etc., I naturally followed Yihui’s recommneded &lt;a href=&#34;https://bookdown.org/yihui/blogdown/workflow.html&#34;&gt;workflow&lt;/a&gt; of using netlify for the site deployment. I was very pleased with how easy it was to start my own blog and kept going for quite some time. Then I quickly ran into a little identity &lt;a href=&#34;https://joongsup.rbind.io/post/2018/01/29/blog-at-rbind-io/&#34;&gt;crisis&lt;/a&gt; (as my netlify subdomain was “uncmbbtrivia”&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;), and I decided to get a subdomain under rbind.io, which I had known about before. With the domain change, I’d change my subdomain name too, I figured.&lt;/p&gt;
&lt;p&gt;So I set out to switch over to rbind.io and ran into rbind support’s about &lt;a href=&#34;https://support.rbind.io/about/&#34;&gt;page&lt;/a&gt;. I opened a &lt;a href=&#34;https://github.com/rbind/support/issues/145&#34;&gt;ticket&lt;/a&gt;, and &lt;a href=&#34;https://github.com/road2stat&#34;&gt;Nan Xiao&lt;/a&gt; quickly helped me with .rbind.io subdomain creation, and now my blog’s at rbind just like that&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;. Without a doubt, it was a very pleasant experience, and I was all set.&lt;/p&gt;
&lt;p&gt;Except that my source files were still residing in my person github account, when I had expected that the source repo would have somehow automatically transferred to rbind github account when my rbind.io subdomain was created. At least that’s how I read the how to join rbind &lt;a href=&#34;https://support.rbind.io/about/&#34;&gt;section&lt;/a&gt; in the about page, but it wasn’t the case, and I ended up transferring my blog source repo to rbind organization repo on github, literally with a click of a button&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. So I joined the other 150+ people (or 60+ repos) that are hosted under rbind github account.&lt;/p&gt;
&lt;p&gt;Back to the RSS feed story, so I needed some quick help on how to generate an RSS feed, and I could’ve just fired up a question on twitterverse and/or opened a ticket on rbind github, but I decided to make use of the rbind repo. These are the people who more or less have the same interest as me, especially in using R for data science and also likely blogdown for blogging, so I should be able to find some clues as to how to generate an RSS feed, I figured.&lt;/p&gt;
&lt;p&gt;And I did find what I was missing there! I noticed that I didn’t have /layouts/rss.xml file&lt;a href=&#34;#fn4&#34; class=&#34;footnoteRef&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;. Once I manually added the file and inserted a couple of lines in my /layouts/partials/header.html, I was all set, and my RSS feed was generated successfully for now&lt;a href=&#34;#fn5&#34; class=&#34;footnoteRef&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So there, I was happy to have my blog subdomain in .rbind.io&lt;a href=&#34;#fn6&#34; class=&#34;footnoteRef&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt;, and I’m also happy to have my source repo under rbind github account, which can “make it easier to discover websites and get inspirations from other people’s websites”, and “…may study its source files, or even ask the author via Github issues.”&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;I understand I could’ve changed the netlify subdomain, but opted to rbind anyway.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;The netlify address still works, but it forwards to rbind. Notes on forwarding &lt;a href=&#34;https://yihui.name/en/2017/11/301-redirect/&#34;&gt;here&lt;/a&gt;, thanks to &lt;span class=&#34;citation&#34;&gt;@yihui&lt;/span&gt;.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;And I think I need to change my local git setting too, at least that’s the message I get whenever I commit/push changes, although it seems like it’s not critical at the moment.&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;Maybe it was not needed, and I could’ve turned on RSS feed somehow differently?&lt;a href=&#34;#fnref4&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;When I validated the RSS link, it gave me some recommendations, and I haven’t spent time to address them yet, but they don’t seem to be errors.&lt;a href=&#34;#fnref5&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;Besides the new name, my other attraction to rbind.io is that rbind.io address automatically tells the world that the blogger cares for R.&lt;a href=&#34;#fnref6&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>Run system commands or shell scripts from an interactive R session</title>
      <link>/post/2018/02/05/run-system-commands-or-shell-sripts-from-an-interactive-r-session/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/02/05/run-system-commands-or-shell-sripts-from-an-interactive-r-session/</guid>
      <description>
        &lt;p&gt;When you are working in an interactive R shell and need to run some system commands, you can use a base R function &lt;a href=&#34;https://stat.ethz.ch/R-manual/R-devel/library/base/html/system.html&#34;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# toy example
system(&amp;quot;ls&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;system&lt;/code&gt; funtion can also be used to run custom shell scripts, like so,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;system(&amp;quot;custom_script.sh arg1 arg2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;custom_script.sh&lt;/code&gt; is a shell script that does some custom operations with &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt;. For example, let’s say I want to extract all the lines in a source file that contains the word “NOTE”. Below&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; is one such shell script, &lt;code&gt;show_notes.sh&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;sh&#34;&gt;&lt;code&gt;#!/bin/sh

if [ -z &amp;quot;$1&amp;quot; ]; then
        echo &amp;quot;Usage: ./show_notes.sh file_with_notes marker&amp;quot;
else

rm $1.$2 2&amp;gt; /dev/null

echo &amp;quot;#-----------------------------------------------------&amp;quot; &amp;gt;&amp;gt; $1.$2
echo &amp;quot;# $2 from&amp;quot; $1 &amp;gt;&amp;gt; $1.$2
echo &amp;quot;#-----------------------------------------------------&amp;quot; &amp;gt;&amp;gt; $1.$2

less $1 | grep $2 &amp;gt;&amp;gt; $1.$2

echo &amp;quot;$2 are saved to file: $1.$2&amp;quot;
fi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The shell script extracts all the lines from the “file_with_notes” (&lt;code&gt;arg1&lt;/code&gt;) that contains a word “marker” (&lt;code&gt;arg2&lt;/code&gt;) and save it to a new file (with a specific file name). Then, from within an open interactive R shell, I can call the shell script like so:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;system(&amp;quot;show_notes.sh explore.R NOTE&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will extracts all lines with “NOTE” in them from &lt;code&gt;explore.R&lt;/code&gt; file and save it to &lt;code&gt;explore.R.NOTE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are several comments to be made about this approach:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Unless &lt;code&gt;show_notes.sh&lt;/code&gt; file is already executable from anywhere (i.e., the directory that contains the show_notes.sh file is in the PATH), you might have to provide the absolute paths for both files. For example, above snippet won’t work, unless the two files (&lt;code&gt;show_notes.sh&lt;/code&gt; and &lt;code&gt;explore.R&lt;/code&gt;) are in the same directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In order for this shell script to be useful, the source file (&lt;code&gt;explore.R&lt;/code&gt;) is assumed to have many lines that contain the marker “NOTE”. The user must have put in conscious efforts to leave “NOTE” marker in &lt;code&gt;explore.R&lt;/code&gt; file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the most part, once above two limitations are understood and resolved, the shell script can be useful.&lt;/p&gt;
&lt;p&gt;Going one step further, if you find yourself using this particular shell script quite often in your data analysis workflow, you can include this shell script as well as the corresponding R wrapper function that calls the shell script (much like &lt;code&gt;system(&amp;quot;ls&amp;quot;)&lt;/code&gt; above) in an R package&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The two main files (custom shell script and R wrapper function) need to be in a specific directory, respectively.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;The custom shell script needs to be in a subdirectory under &lt;code&gt;/inst&lt;/code&gt; &lt;a href=&#34;http://r-pkgs.had.co.nz/inst.html&#34;&gt;directory&lt;/a&gt; under the package’s root. Let’s say for this example, the &lt;code&gt;show_notes.sh&lt;/code&gt; file is in &lt;code&gt;/inst/sh&lt;/code&gt; directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The R wrapper function needs to be in the usual &lt;code&gt;/R&lt;/code&gt; directory under the package’s root directory. For this example, the corresponding R wrapper function is called &lt;code&gt;show_notes()&lt;/code&gt; and looks like so:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_notes &amp;lt;- function(src, marker = &amp;quot;NOTE&amp;quot;){

  main_sh &amp;lt;- system.file(&amp;quot;sh&amp;quot;, &amp;quot;show_notes.sh&amp;quot;, package = &amp;quot;my_awesome_R_pkg&amp;quot;)
  cmd &amp;lt;- paste0(main_sh, &amp;quot; &amp;quot;, src, &amp;quot; &amp;quot;, marker)
  print(cmd)
  system(cmd)

}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that R’s base &lt;code&gt;system.file()&lt;/code&gt; function is used here to search for the &lt;code&gt;show_notes.sh&lt;/code&gt; file in a subdirectory &lt;code&gt;/sh&lt;/code&gt; under the root directory of installed package, &lt;code&gt;my_awesome_R_pkg&lt;/code&gt;.&lt;a href=&#34;#fn4&#34; class=&#34;footnoteRef&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once &lt;code&gt;my_awesome_R_pkg&lt;/code&gt; is installed and loaded, you can call this R wrapper function from your open interactive R shell, like so (assuming &lt;code&gt;explore.R&lt;/code&gt; file is in the current working directory of the open interactive R session):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_notes(&amp;quot;explore.R&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function call will extract all the lines from &lt;code&gt;explore.R&lt;/code&gt; file that contains “NOTE” in them and save it to &lt;code&gt;explore.R.NOTE&lt;/code&gt; in the same directory as the &lt;code&gt;explore.R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This approach can be useful, for example, if you want to keep track of intermediate narratives of your data analysis, which is done interactively in an R session with codes from a source file.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Both a newer version function &lt;a href=&#34;https://stat.ethz.ch/R-manual/R-devel/library/base/html/system2.html&#34;&gt;&lt;code&gt;system2&lt;/code&gt;&lt;/a&gt; and a relatively new file system operations opackage &lt;a href=&#34;http://fs.r-lib.org&#34;&gt;fs&lt;/a&gt; seem great alternatives, but I haven’t tried them yet.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Note that in addition to familiar R code chunks, you can also execute code chunks in other lanauges by calling the target language engine in place of r. For options, see &lt;a href=&#34;http://rmarkdown.rstudio.com/authoring_knitr_engines.html&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Check out Jim Hester’s 2018 rstudio conference presentation &lt;a href=&#34;https://github.com/jimhester/presentations/tree/master/2018_02_03-You-can-make-a-package-in-20-minutes&#34;&gt;here&lt;/a&gt; for motivations and minimal package file structure.&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;Note that source files in &lt;code&gt;/inst/sh&lt;/code&gt; are copied to &lt;code&gt;/sh&lt;/code&gt; when R package is installed.&lt;a href=&#34;#fnref4&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>New Hugo theme</title>
      <link>/post/2018/02/03/new-hugo-theme/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/02/03/new-hugo-theme/</guid>
      <description>
        &lt;p&gt;Last time, I wrote about a &lt;a href=&#34;https://joongsup.rbind.io/post/2018/02/01/quiz-from-work/&#34;&gt;quiz&lt;/a&gt; from work, including the code solution. Unfortunately, I didn’t really like how the code block was printed in the &lt;a href=&#34;https://themes.gohugo.io/minimal/&#34;&gt;minimal&lt;/a&gt; theme. I’m pretty sure there’s a quick and/or easy fix, but since I’m starting this blogging thing, I decided to try some other themes while at it.&lt;/p&gt;
&lt;p&gt;It took some googling/reading/tweaking, but I ended up with Yihui’s &lt;a href=&#34;https://github.com/yihui/hugo-xmin&#34;&gt;XMin&lt;/a&gt; theme, and overall I’m satisfied with what I ended up with at the moment. It could’ve been helpful to record each and every step I took and write a blog post about it, but unfortunately, I didn’t record each and every step that I ended up taking. Nonetheless, I’ll try to summarize what I went through later for my own record, if anything.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Quiz from work</title>
      <link>/post/2018/02/01/quiz-from-work/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/02/01/quiz-from-work/</guid>
      <description>
        &lt;blockquote&gt;
&lt;p&gt;There are 25 black balls and 25 white balls in a jar. We take two balls at random from the jar, and the one of the three: (1) if two black balls are drawn, put them back in to the jar; (2) if two white balls are drawn, throw them away; (3) if mixed, put a white ball back in, and throw away the black ball. We win this game when a white ball is the only ball remaining in the jar. Can we win the game, and if yes, what’s the probability that we win the game?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since this quiz was asked in a “coding challenge” session at work, I went ahead and wrote the following to see what happens, even though I suspected this could be solved with pen/paper, especially because the quiz was introduced as a question that had been asked at a job interview.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_balls &amp;lt;- function(balls){ # balls = list(begin_w, begin_b)
  w &amp;lt;- balls[[1]]
  b &amp;lt;- balls[[2]]
  #print(paste0(&amp;quot;Beginning balls (w, b): &amp;quot;, w, &amp;quot;, &amp;quot;, b))
  
  # note I&amp;#39;m assuming two balls are drawn one at a time, not together
  # other drawing rules are possible
  # drawing rule for first ball
  if (runif(1) &amp;lt; w/(w + b)) {
    wtmp1 &amp;lt;- 1 # draw white
    btmp1 &amp;lt;- 0
  } else {
    wtmp1 &amp;lt;- 0
    btmp1 &amp;lt;- 1 # draw black
  }
      
  # drawing rule for second ball
  if (runif(1) &amp;lt; (w - wtmp1)/(w - wtmp1 + b - btmp1)){
    wtmp2 &amp;lt;- 1 # draw white
    btmp2 &amp;lt;- 0
  } else {
    wtmp2 &amp;lt;- 0
    btmp2 &amp;lt;- 1 # draw black
  } 
      
  # post-draw actions
 
  if (wtmp1 == 1 &amp;amp; wtmp2 == 1) {
    #print(&amp;quot;Balls drawn: 2 W&amp;quot;)
    w &amp;lt;- w - (wtmp1 + wtmp2)
    b &amp;lt;- b
  } else if (btmp1 == 1 &amp;amp; btmp2 == 1){
    #print(&amp;quot;Balls drawn: 2 B&amp;quot;)
    w &amp;lt;- w
    b &amp;lt;- b
  } else { # if mixed
    #print(&amp;quot;Balls drawn: mixed&amp;quot;)
    w &amp;lt;- w
    b &amp;lt;- b - 1
  }

  #print(paste0(&amp;quot;Ending balls (w, b): &amp;quot;, w, &amp;quot;, &amp;quot;, b))
  balls &amp;lt;- list(ending_w = w, ending_b = b)
}

# stopping rule1: if whilte ball = 0, black balls &amp;gt;= 1; then white loses
# stopping rule2: if black ball = 0, white ball odd numbers are left; then white wins
# stopping rule3: if black ball = 0, white ball even numbers are left; then white loses

iterate_draw_balls &amp;lt;- function(count = 0, begin_w, begin_b){

  while(begin_w * begin_b &amp;gt; 0){
    #print(&amp;quot;==============================&amp;quot;)
    count &amp;lt;- count + 1
    #print(paste0(&amp;quot;Count: &amp;quot;, count))
    
    a &amp;lt;- draw_balls(list(begin_w, begin_b))
    begin_w &amp;lt;- a$ending_w
    begin_b &amp;lt;- a$ending_b
  }

  
  if (begin_w == 0){ # stopping rule 1
    win &amp;lt;- 0
    #print(&amp;quot;The last ball was a black one&amp;quot;)
    win
  } else if (begin_w %% 2 == 1) { # stopping rule 2
    win &amp;lt;- 1
    #print(&amp;quot;The last ball was a white one.&amp;quot;)
    win
  } else if (begin_w %% 2 == 0) { # stopping rule 3
    win &amp;lt;- 0
    #print(&amp;quot;There is no ball left.&amp;quot;)
    win
  } else {
    #print(&amp;quot;Shouldn&amp;#39;t see this!&amp;quot;)
    win &amp;lt;- -9999999999
  }
}

#--------------------------------
# run the monte carlo simulation
#--------------------------------

set.seed(1234)
N &amp;lt;- 100
begin_w &amp;lt;- 25
begin_b &amp;lt;- 25
results &amp;lt;- vector(&amp;quot;list&amp;quot;, length = N)
for (sim in 1:N){
  #print(paste0(&amp;quot;Simulation iteration: &amp;quot;, sim))
  results[[sim]] &amp;lt;- iterate_draw_balls(count = 0, begin_w = begin_w, begin_b = begin_b)
  #print(paste0(&amp;quot;Simulation result: &amp;quot;, results[[sim]]))
}
sum(unlist(results))/N&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For different values of N, the results were the same, depending on whether the number of white balls was odd or even. So the immediate answer to the quiz seems to be that we always win, since we started the game with 25 white balls.&lt;/p&gt;
&lt;p&gt;Seeing such pattern, I thought about state space of white and black balls in terms of them being odd or even, and after tinkering with different transition cases, it confirmed my simulation experiment.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>3 game losing streak</title>
      <link>/post/2018/01/30/3-game-losing-streak/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/30/3-game-losing-streak/</guid>
      <description>
        &lt;p&gt;Here we go again. 3 Ls in a row. When was the last time we had this kind of losing skid?&lt;/p&gt;
&lt;p&gt;So the last time there was a 3-game losing streak was back in 2014, and to my surprise,&lt;/p&gt;
&lt;p&gt;I got curious as to what the worst losing streak was since 1950 season. To do that I’m looking at the number of seasons with losing streaks up to certain nuber.&lt;/p&gt;
&lt;p&gt;So as seen earlier, one in every four seasons, we’ve seen at least one occasion of 3-game losing streaks. What gets me is that there’s been seasons in which we had 4+ game losing streaks! Let’s see what those seasons were and what were those games for those seasons with at least one 6-game losing streaks.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Blog at rbind.io</title>
      <link>/post/2018/01/29/blog-at-rbind-io/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/29/blog-at-rbind-io/</guid>
      <description>
        &lt;p&gt;This weekend, I made a small but meaningful change to the blog that I started late last year. Initially, my blog was named UNCMBBTRIVIA to emphasize to the readers that this blog is about my beloved UNC Men’s Basketball team’s trivia. But I always wanted to have a blog where I write not only about UNC MBB trivia, but more importantly about data analysis and R.&lt;/p&gt;
&lt;p&gt;As I thought about it more, it became clear that I’d better drop the UNCMBBTrivia-only identity of the blog to start writing more about data analysis and R, and ever since then I’ve been thinking about how and when to make the change. Searching for ideas, this Friday I was reading this and that, and bam! I ran into Yihui’s online blogdown book, in which he introduced *.rbind.io subdomain option for deployment (via netlify, which was my original choice).&lt;/p&gt;
&lt;p&gt;Everything about *.rbind.io option was just right for what I wanted: moving away from UNCMBBTrivia-only identity, showing a taste of data-powered contents of the blog, and being more active in the R community (who among useRs are not excited about interacting with &lt;span class=&#34;citation&#34;&gt;@yihui&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;@hadley&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;@drob&lt;/span&gt;, and many more amazing folks in R community?)&lt;/p&gt;
&lt;p&gt;So this weekend, I jumpted the gun and created an issue on rbind support github, which is what one needs to do to request for an rbind.io subdomain. To my pleasant surprise, &lt;span class=&#34;citation&#34;&gt;@road2stat&lt;/span&gt; responded to my request quickly, and less than 24 hours later, the new blog address is joongsup.rbind.io :) (&lt;del&gt;I wonder if there’s a way to automatically redirect the visit to the original netlify address to the new rbind.io one?&lt;/del&gt; And there’s a way to do it. See &lt;a href=&#34;https://yihui.name/en/2017/11/301-redirect/&#34;&gt;here&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;I couldn’t be happier with the whole experience, and am looking forward to sharing my journey in data analysis and R in addition to UNCMBBTrivia here.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>One year after rstudio::conf 2017</title>
      <link>/post/2018/01/29/one-year-after-rstudio-conf-2017/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/29/one-year-after-rstudio-conf-2017/</guid>
      <description>
        &lt;p&gt;It was merely a name &lt;a href=&#34;https://joongsup.rbind.io/post/blog-at-rbind-io/&#34;&gt;change&lt;/a&gt;, but with the new blog address at rbind.io, I’m excited about the fact that I am a blogger who uses his name in his blog address, because I’ve always considered it to be one of the coolest things you can do online :) And it got me thinking, where did it all start from? After many failed attempts to start and maintain my own blog, how is it that this time, it seems it’ll just work?&lt;/p&gt;
&lt;p&gt;A quick answer was @&lt;a href=&#34;https://github.com/yihui&#34;&gt;yihui&lt;/a&gt; and &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt; package, along with amazing R &lt;a href=&#34;https://github.com/rbind/support&#34;&gt;community/support&lt;/a&gt;, but besides blogging, I knew I did one or two other cool things last year, and quickly I realized that it all started with the rstudio conference I attended in 2017. It’s probably not a coincidence that I came to this realization right before the week of rstudio conference 2018, because my twitter feed is all mentions related to the conference. With that I got to think about other cool things I ended up doing last year, particularly since attending the rstudio conference.&lt;/p&gt;
&lt;p&gt;So here is a quick list of other cool things I’ve done with a brief comments under each, while at and since attending the rstudio conference in January, 2017. I tried to keep them in a chronological order.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Hadley’s autograph&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I took Hadley’s Master R Developer workshop, since having worked with R for a couple of years now, I wanted to write an R package at some point. It was simply a great workshop, and yes I asked for his autograph on the first page of his &lt;a href=&#34;http://adv-r.had.co.nz/&#34;&gt;Advanced R&lt;/a&gt; book, which he did :)&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Started using github&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I never used github before. I created an account on github some time ago, but never actually used it. After taking the training and listening to the talks at the conference, I decided not only to start using it, but to use it frequently. Version control was never a part of my education/work, and I think it’s great seeing many folks having pushed/pusing for the inclusion of this topic in data science/statistics curriculum these days. This is just one of those things that I wish I had learned while at school.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Wrote my first R (data) &lt;a href=&#34;https://cran.r-project.org/web/packages/uncmbb/index.html&#34;&gt;package&lt;/a&gt;, now available on CRAN&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One of the coolest things I’ve always considered as an avid R user is having your own R package available on CRAN. Hadley’s Master R Developer workshop was the single biggest reason I wanted to attend the conference in 2017, and not so long after the conference, I had my first R package up on CRAN. I’m planning to write about starting your data analysis journey with creating an R data packge of your own.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Started preaching R package, tidyverse, and reproducible research (RR) at work&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’ve been the R guy at work even before the rstudio conference, but after attending the Hadley’s training and embracing the idea of developing R packages for projects especially for the purpose of doing reproducible research (casually, I call it reproducible work instead) over other work artifacts and habits, I’m that R guy even more who’s introducing tidyverse approach and sharing tips for doing reproducible work. Again, I’m hoping to write about data analysis workflow that I came to settle on that helps with doing RR at work.&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Started having a second thought about R packages and tinkered with .Rprofile&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As I tried to incorporate R packages for projects at work, soon I ran into several roadblocks mainly due to inherent limitations of corporate world. I’m planning to write about this some time later too, but the main issue was that there are times that I can’t use RStudio IDE at work and instead have to work with other tools, mainly in R command line in company servers (which I’m happy with, but not at the same level as using RStudio IDE). Since I wasn’t making a good progress in incorporating packages for projects, I started using .Rprofile files to put frequently used functions in one place, but surely I ended up running into the challenges of easily sharing my work with team members.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Turned around once again and made a second R package, primarily for use at work (local).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Not long after I shared my frustration with the difficulty of R package development under corporate environment and my use of .Rprofile file with my team members, I found a way to solve the particular problems I was having. I ended up ditching the use of .Rprofile file completely, and now when I run into such challenges (that are inherent to large company environments), I try to find a solution within existing limitations somehow. Definitely, many times working in a corporate environment can be inefficient and slow, but it’s still no reason to use .Rprofile for frequently used functions.&lt;/p&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Started a blog, now using rbind.io subdomain.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At the conference, I didn’t really pay attention to @&lt;a href=&#34;https://github.com/yihui&#34;&gt;yihui&lt;/a&gt;’s talks on blogdown. As my first R package became available on CRAN, however, I wanted to share a couple of quick data analyses that can be done with the data, and quickly I ran into a couple of how-to’s using blogdown. There’s been many failed attempts to create and maintain my own blog in the past, but I was able to start blogging and keep doing it still, thanks to @&lt;a href=&#34;https://github.com/yihui&#34;&gt;yihui&lt;/a&gt; and other great folks in R community.&lt;/p&gt;
&lt;p&gt;Unfortunately, I’m not going to the rstudio conference this year (training/conference schedule just didn’t work out), and boy do I want to be there this week. For those of you lucky attendees, I hope you make the best out of the conference and enjoy everything you get to learn from amazing people and do your own cool/amazing things after the conference.&lt;/p&gt;
&lt;p&gt;I know you will :)&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
